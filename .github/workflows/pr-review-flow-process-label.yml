name: PR Review Flow -- process labels

on:
  pull_request_target:
    types: [ labeled, opened, synchronize, reopened ]

permissions:
  pull-requests: write    # For managing reviews
  issues: write          # For labels

jobs:
  add-facilitators:
    if: contains(github.event.pull_request.labels.*.name, 'ready-for-facilitators')
    runs-on: self-hosted
    steps:    
      - name: "Assign Code Facilitators to PR"
        id: add-facilitators
        uses: LexxaRRioo/codefacilitators@actually-add-debugging-with-rebuild
        continue-on-error: true
        with:
          token: ${{ secrets.PR_TOKEN }}
          file: .github/CODEFACILITATORS
          add_groups_directly: true
          
  add-tech-team:
    if: contains(github.event.pull_request.labels.*.name, 'ready-for-tech-review')
    runs-on: self-hosted
    steps:    
      - name: "Assign tech team to PR"
        id: add-tech-team
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PR_TOKEN }}
          script: |            
            try {              
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                team_reviewers: ['tech-team']
              });
              console.log('Successfully added tech team as reviewer');
              
            } catch (error) {
              console.error('Error details:', {
                message: error.message,
                status: error.status,
                response: error.response?.data
              });
              throw error;
            }
