name: PR Review Flow -- process labels

on:
  pull_request_target:
    types: [ labeled, opened, synchronize, reopened ]

permissions:
  pull-requests: write    # For managing reviews
  issues: write          # For labels

jobs:
  add-facilitators:
    if: contains(github.event.pull_request.labels.*.name, 'ready-for-facilitators')
    runs-on: self-hosted
    steps:    
      - name: "Assign Code Facilitators to PR"
        id: add-facilitators
        uses: 0xtekgrinder/codefacilitators@v1.0.0
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file: .github/CODEFACILITATORS
          
  add-tech-team:
    if: contains(github.event.pull_request.labels.*.name, 'ready-for-tech-review')
    runs-on: self-hosted
    steps:    
      - name: Assign tech team to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('Adding tech team review');
            // First, let's get the team ID
            try {
              const { data: team } = await github.rest.teams.getByName({
                org: context.repo.owner,
                team_slug: 'tech_team'
              });
              
              console.log('Debug: Found team:', {
                team_id: team.id,
                team_name: team.name,
                team_slug: team.slug
              });
              
              // Now request review using team id
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                team_reviewers: [team.slug]  // Using slug instead of name
              });
              
              console.log('Successfully added tech team as reviewer');
            } catch (error) {
              console.error('Error details:', {
                message: error.message,
                status: error.status,
                response: error.response?.data
              });
              throw error;
            }
