name: Notify Teams

on:
  pull_request:
    types: [labeled]

jobs:
  notify-informed-team:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Load notification config
        id: config
        run: |
          CONFIG=$(cat .github/notify.yml | grep -v '^---' || echo "")
          echo "config<<EOF" >> $GITHUB_OUTPUT
          echo "$CONFIG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Process notifications
        id: process
        uses: actions/github-script@v7
        with:
          script: |
            const yaml = require('yaml');
            const config = yaml.parse(process.env.CONFIG);
            
            // Get the label that triggered this event
            const triggeredLabel = context.payload.label.name;
            
            // Check if we have configuration for this label
            const labelConfig = config.notifications[triggeredLabel];
            if (!labelConfig) {
              console.log(`No notification configured for label: ${triggeredLabel}`);
              return;
            }
            
            // Prepare notification data
            const notificationData = {
              label: triggeredLabel,
              channel: labelConfig.channel,
              webhookKey: `SLACK_${labelConfig.channel}`,
              payload: {
                blocks: [
                  {
                    type: "header",
                    text: {
                      type: "plain_text",
                      text: labelConfig.message,
                      emoji: true
                    }
                  },
                  {
                    type: "section",
                    text: {
                      type: "mrkdwn",
                      text: `*PR:* <${context.payload.pull_request.html_url}|${context.payload.pull_request.title}>\n*Author:* ${context.payload.pull_request.user.login}\n*Label Added:* ${triggeredLabel}`
                    }
                  },
                  {
                    type: "section",
                    text: {
                      type: "mrkdwn",
                      text: `>${context.payload.pull_request.body?.substring(0, 200)}${context.payload.pull_request.body?.length > 200 ? '...' : ''}`
                    }
                  },
                  {
                    type: "divider"
                  },
                  {
                    type: "context",
                    elements: [
                      {
                        type: "mrkdwn",
                        text: `Added by: ${context.payload.sender.login} | Created: ${new Date(context.payload.pull_request.created_at).toLocaleDateString()}`
                      }
                    ]
                  }
                ]
              }
            };
            
            return notificationData;
        env:
          CONFIG: ${{ steps.config.outputs.config }}

      - name: Send Slack notification
        if: steps.process.outputs.result != ''
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: ${{ fromJson(steps.process.outputs.result).payload }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets[fromJson(steps.process.outputs.result).webhookKey] }}
